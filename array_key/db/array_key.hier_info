|array_key
clk => clk~0.IN1
rst_n => rst_n~0.IN2
row[0] => row[0]~3.IN1
row[1] => row[1]~2.IN1
row[2] => row[2]~1.IN1
row[3] => row[3]~0.IN1
col[0] <= key16_1:key16_1_inst.col
col[1] <= key16_1:key16_1_inst.col
col[2] <= key16_1:key16_1_inst.col
col[3] <= key16_1:key16_1_inst.col
addr[0] <= <GND>
addr[1] <= <GND>
addr[2] <= <GND>
seg_n[0] <= encoder:encoder_inst.seg_n
seg_n[1] <= encoder:encoder_inst.seg_n
seg_n[2] <= encoder:encoder_inst.seg_n
seg_n[3] <= encoder:encoder_inst.seg_n
seg_n[4] <= encoder:encoder_inst.seg_n
seg_n[5] <= encoder:encoder_inst.seg_n
seg_n[6] <= encoder:encoder_inst.seg_n
seg_n[7] <= encoder:encoder_inst.seg_n


|array_key|clk_div:clk_div_inst
clk => cnt[19].CLK
clk => cnt[18].CLK
clk => cnt[17].CLK
clk => cnt[16].CLK
clk => cnt[15].CLK
clk => cnt[14].CLK
clk => cnt[13].CLK
clk => cnt[12].CLK
clk => cnt[11].CLK
clk => cnt[10].CLK
clk => cnt[9].CLK
clk => cnt[8].CLK
clk => cnt[7].CLK
clk => cnt[6].CLK
clk => cnt[5].CLK
clk => cnt[4].CLK
clk => cnt[3].CLK
clk => cnt[2].CLK
clk => cnt[1].CLK
clk => cnt[0].CLK
clk => clk_20K~reg0.CLK
rst_n => clk_20K~reg0.PRESET
rst_n => cnt[19].ACLR
rst_n => cnt[18].ACLR
rst_n => cnt[17].ACLR
rst_n => cnt[16].ACLR
rst_n => cnt[15].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[0].ACLR
clk_20K <= clk_20K~reg0.DB_MAX_OUTPUT_PORT_TYPE


|array_key|key16_1:key16_1_inst
clk => col[3]~reg0.CLK
clk => col[2]~reg0.CLK
clk => col[1]~reg0.CLK
clk => col[0]~reg0.CLK
clk => key_val[4]~reg0.CLK
clk => key_val[3]~reg0.CLK
clk => key_val[2]~reg0.CLK
clk => key_val[1]~reg0.CLK
clk => key_val[0]~reg0.CLK
clk => cnt[5].CLK
clk => cnt[4].CLK
clk => cnt[3].CLK
clk => cnt[2].CLK
clk => cnt[1].CLK
clk => cnt[0].CLK
rst_n => col[3]~reg0.PRESET
rst_n => col[2]~reg0.PRESET
rst_n => col[1]~reg0.PRESET
rst_n => col[0]~reg0.ACLR
rst_n => key_val[4]~reg0.PRESET
rst_n => key_val[3]~reg0.PRESET
rst_n => key_val[2]~reg0.PRESET
rst_n => key_val[1]~reg0.PRESET
rst_n => key_val[0]~reg0.PRESET
rst_n => cnt[5].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[0].ACLR
row[0] => Decoder0.IN3
row[1] => Decoder0.IN2
row[2] => Decoder0.IN1
row[3] => Decoder0.IN0
col[0] <= col[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[1] <= col[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[2] <= col[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[3] <= col[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_val[0] <= key_val[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_val[1] <= key_val[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_val[2] <= key_val[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_val[3] <= key_val[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_val[4] <= key_val[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|array_key|encoder:encoder_inst
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
data[4] => seg_n~6.OUTPUTSELECT
data[4] => seg_n~5.OUTPUTSELECT
data[4] => seg_n~4.OUTPUTSELECT
data[4] => seg_n~3.OUTPUTSELECT
data[4] => seg_n~2.OUTPUTSELECT
data[4] => seg_n~1.OUTPUTSELECT
data[4] => seg_n~0.OUTPUTSELECT
seg_n[0] <= seg_n~6.DB_MAX_OUTPUT_PORT_TYPE
seg_n[1] <= seg_n~5.DB_MAX_OUTPUT_PORT_TYPE
seg_n[2] <= seg_n~4.DB_MAX_OUTPUT_PORT_TYPE
seg_n[3] <= seg_n~3.DB_MAX_OUTPUT_PORT_TYPE
seg_n[4] <= seg_n~2.DB_MAX_OUTPUT_PORT_TYPE
seg_n[5] <= seg_n~1.DB_MAX_OUTPUT_PORT_TYPE
seg_n[6] <= seg_n~0.DB_MAX_OUTPUT_PORT_TYPE
seg_n[7] <= <VCC>


