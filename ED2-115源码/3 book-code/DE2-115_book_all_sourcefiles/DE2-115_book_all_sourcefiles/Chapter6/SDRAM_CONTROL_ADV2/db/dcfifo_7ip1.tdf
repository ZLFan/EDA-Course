--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone IV E" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=512 LPM_SHOWAHEAD="OFF" LPM_WIDTH=8 LPM_WIDTH_R=32 LPM_WIDTHU=9 LPM_WIDTHU_R=7 OVERFLOW_CHECKING="ON" RAM_BLOCK_TYPE="M9K" RDSYNC_DELAYPIPE=4 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="OFF" WRSYNC_DELAYPIPE=4 aclr data q rdclk rdreq rdusedw wrclk wrreq CYCLONEII_M4K_COMPATIBILITY="ON" CYCLONEII_SAFE_WRITE="RESTRUCTURE" INTENDED_DEVICE_FAMILY="Cyclone IV E" LOW_POWER_MODE="AUTO" lpm_hint="RAM_BLOCK_TYPE=M9K" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 10.0 cbx_a_gray2bin 2010:06:27:21:21:57:SJ cbx_a_graycounter 2010:06:27:21:21:57:SJ cbx_altdpram 2010:06:27:21:21:57:SJ cbx_altsyncram 2010:06:27:21:21:57:SJ cbx_cycloneii 2010:06:27:21:21:57:SJ cbx_dcfifo 2010:06:27:21:21:57:SJ cbx_fifo_common 2010:06:27:21:21:57:SJ cbx_lpm_add_sub 2010:06:27:21:21:57:SJ cbx_lpm_compare 2010:06:27:21:21:57:SJ cbx_lpm_counter 2010:06:27:21:21:57:SJ cbx_lpm_decode 2010:06:27:21:21:57:SJ cbx_lpm_mux 2010:06:27:21:21:57:SJ cbx_mgl 2010:06:27:21:25:48:SJ cbx_scfifo 2010:06:27:21:21:57:SJ cbx_stratix 2010:06:27:21:21:57:SJ cbx_stratixii 2010:06:27:21:21:57:SJ cbx_stratixiii 2010:06:27:21:21:57:SJ cbx_stratixv 2010:06:27:21:21:57:SJ cbx_util_mgl 2010:06:27:21:21:57:SJ  VERSION_END


-- Copyright (C) 1991-2010 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_gray2bin_tgb (gray[7..0])
RETURNS ( bin[7..0]);
FUNCTION a_graycounter_s57 (aclr, clock, cnt_en)
RETURNS ( q[7..0]);
FUNCTION a_graycounter_njc (aclr, clock, cnt_en)
RETURNS ( q[7..0]);
FUNCTION altsyncram_or81 (aclr1, address_a[8..0], address_b[6..0], addressstall_b, clock0, clock1, clocken1, data_a[7..0], wren_a)
RETURNS ( q_b[31..0]);
FUNCTION dffpipe_fd9 (clock, clrn, d[7..0])
RETURNS ( q[7..0]);
FUNCTION alt_synch_pipe_hkd (clock, clrn, d[7..0])
RETURNS ( q[7..0]);
FUNCTION alt_synch_pipe_ikd (clock, clrn, d[7..0])
RETURNS ( q[7..0]);
FUNCTION cmpr_e66 (dataa[7..0], datab[7..0])
RETURNS ( aeb);
FUNCTION cntr_64e (aset, clock, cnt_en)
RETURNS ( cout, q[1..0]);

--synthesis_resources = lut 11 M9K 1 reg 98 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 2;{-to wrptr_g} suppress_da_rule_internal=S102;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe16|dffe17a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_hd9:dffpipe16|dffe17a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe13|dffe14a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_gd9:dffpipe13|dffe14a* """;

SUBDESIGN dcfifo_7ip1
( 
	aclr	:	input;
	data[7..0]	:	input;
	q[31..0]	:	output;
	rdclk	:	input;
	rdreq	:	input;
	rdusedw[6..0]	:	output;
	wrclk	:	input;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g_gray2bin : a_gray2bin_tgb;
	rs_dgwp_gray2bin : a_gray2bin_tgb;
	rdptr_g1p : a_graycounter_s57;
	wrptr_g1p : a_graycounter_njc;
	fifo_ram : altsyncram_or81;
	delayed_wrptr_g[7..0] : dffe;
	rdptr_g[7..0] : dffe;
	wrptr_g[9..0] : dffe;
	rs_brp : dffpipe_fd9;
	rs_bwp : dffpipe_fd9;
	rs_dgwp : alt_synch_pipe_hkd;
	ws_dgrp : alt_synch_pipe_ikd;
	rdusedw_sub_dataa[7..0]	:	WIRE;
	rdusedw_sub_datab[7..0]	:	WIRE;
	rdusedw_sub_result[7..0]	:	WIRE;
	rdempty_eq_comp : cmpr_e66;
	wrfull_eq_comp : cmpr_e66;
	cntr_b : cntr_64e;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[8..0]	: WIRE;
	ram_address_b[6..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[7..0]	: WIRE;

BEGIN 
	rdptr_g_gray2bin.gray[] = rdptr_g[].q;
	rs_dgwp_gray2bin.gray[] = rs_dgwp.q[];
	rdptr_g1p.aclr = aclr;
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = valid_rdreq;
	wrptr_g1p.aclr = aclr;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = (valid_wrreq & cntr_b.cout);
	fifo_ram.aclr1 = aclr;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! valid_rdreq);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.clocken1 = valid_rdreq;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = (! aclr);
	delayed_wrptr_g[].d = wrptr_g[9..2].q;
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrptr_g[].clk = wrclk;
	wrptr_g[].clrn = (! aclr);
	wrptr_g[].d = ( wrptr_g1p.q[], cntr_b.q[]);
	wrptr_g[].ena = valid_wrreq;
	rs_brp.clock = rdclk;
	rs_brp.clrn = (! aclr);
	rs_brp.d[] = rdptr_g_gray2bin.bin[];
	rs_bwp.clock = rdclk;
	rs_bwp.clrn = (! aclr);
	rs_bwp.d[] = rs_dgwp_gray2bin.bin[];
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = (! aclr);
	ws_dgrp.d[] = rdptr_g[].q;
	rdusedw_sub_result[] = rdusedw_sub_dataa[] - rdusedw_sub_datab[];
	rdusedw_sub_dataa[] = rs_bwp.q[];
	rdusedw_sub_datab[] = rs_brp.q[];
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	cntr_b.aset = aclr;
	cntr_b.clock = wrclk;
	cntr_b.cnt_en = valid_wrreq;
	int_rdempty = rdempty_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_g[9..9].q $ wrptr_g[8..8].q), wrptr_g[7..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[7..7] $ rdptr_g1p.q[6..6]), rdptr_g1p.q[5..0]);
	rdusedw[] = ( rdusedw_sub_result[6..0]);
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrptr_gs[] = ( (! wrptr_g[9..9].q), (! wrptr_g[8..8].q), wrptr_g[7..2].q);
END;
--VALID FILE
